1.String 클래스에서 concat 메서드를 설명하시오.
 - 양 쪽의 String 객체를 합치는 메서드이다.
 - 한 쪽의 객체에 합쳐지는 것이 아닌 새로운 객체를 생성해 합쳐지므로 여러 인스턴스가 생기는 단점이 있다.

2.str.substring(2, 4); substring 사용법에 대하여 설명하시오.
 - subString메서드의 첫번째의 매개변수는 시작 인덱스 값 두 번째는 끝 인덱스 값을 적어준다.
 - String문자열의 맨 앞글자를 0번으로하고 첫 번째 매개변수 인덱스 값부터 두 번째 매개변수 -1의 인덱스 값까지의 글자를 반환한다.
 - str.subString(2,4)는 str문자열의 2번부터 3번까지의 문자열을 반환한다.

3.st1.compareTo(st2);compareTo 사용법에 대하여 설명하시오.
 - 사전에서 두 문자열이 누가 먼저인지 비교해주는 메서드로 st1이 앞에 있을 경우 음수(-)값을 반환하고 같으면 0, 뒤에있으면
   양수(+)값을 반환한다.

4.String.valueOf 에 대하여 설명하시오.
 - valueOf()안의 매개변수를 String자료형으로 변환시켜주는 메서드이다.
 - ex) int e = 10; 
       String.value(e) ----> string e = "10";

5. 아래의 연산과정에서 호출되는 함수(원리)를 써서 표현해 보세요.
String str = "age: " + 17;
 - 17을 먼저 valueOf()로 String 자료형으로 바꿔주고 concat()을 이용해 "age: "와 17을 합쳐준다.
 - String str = "age: ".concat(String.valueOf(17);

6.StringBuilder 와 String 의 차이는?
 - String은 immutable로 불변하지만 StringBuilder는 불변하지 않다.
 - String은 변하지 않는 문자열에서 사용할시 메모리 관리에 용이하지만 자주 바뀌고 연산이 필요한 경우 메모리 낭비가 크다는 단점이 있다.
   StringBuilder는 변경가능 하기 때문에 자주 바꿔야하는 상황이나 연산에서 유리하다.

7.String 을 이용하여 프로그래밍 하시오.
입력 : 990925-1012999
출력 : 990925 1012999
import java.util.Scanner;

public class Delete {
	private String number;

	public String getNumber() {
		return number;
	}

	public void setNumber(String number) {
		this.number = number;
	}

	void input() {
		Scanner sc = new Scanner(System.in);
		number = sc.nextLine();
		sc.close();
	}

	void delete() {
		number = number.substring(0, 6).concat(" ").concat(number.substring(7, 14));
		System.out.println(number);
	}

	void play() {
		input();
		delete();
	}

	public static void main(String[] args) {
		Delete d = new Delete();
		d.play();
	}

}

8.아래의 메모리 그림을 그리시오.
int[] ar1 = new int[5];




9.아래를 프로그래밍 하시오.(단 클래스로 구성할것)
입력:lee sunkyo
출력:first name: lee second name:sunkyo
import java.util.Scanner;

public class Name {
	private String name;
	private int stop;

	void input() {
		Scanner sc = new Scanner(System.in);
		System.out.println("이름을 입력하세요 : ");
		name = sc.nextLine();
	}

	void cut() {
		for (int i = 0; i < name.length(); i++) {
			if (name.charAt(i) == ' ') {
				stop = i;
			}
		}
		System.out.println("first name: " + name.substring(0, stop));
		System.out.print(" second name: " + name.substring(stop + 1));
	}

	void print() {
		input();
		cut();
	}

	public static void main(String[] args) {
		Name n = new Name();
		n.print();
	}
}

10.아래를 프로그래밍 하시오.

입력 : 홍 길동 
출력 : 성 = 홍  이름 = 길동 

입력 : 홍길동 	
출력 : 공백이 없군요. 다시 입력해주세요.

import java.util.Scanner;

public class Name {
	private String name;
	private int stop;
	private boolean a = true;

	void input() {

		Scanner sc = new Scanner(System.in);
		System.out.println("이름을 입력하세요 : ");
		name = sc.nextLine();
	}

	boolean cut() {
		stop = name.indexOf(" ");
		if (stop == -1) {
			System.out.println("공백이 없군요 다시입력해주세요.");
			return a = true;
		}
		System.out.print("성: " + name.substring(0, stop));
		System.out.println("  이름: " + name.substring(stop + 1));
		return a = false;
	}

	void print() {
		while (a) {
			input();
			cut();
		}

	}

	public static void main(String[] args) {
		Name n = new Name();
		n.print();
	}
}

11.아래를 프로그래밍 하시오.
"Hello.java" 문자열에서 파일명과 확장자인 java를 분리시키는 프로그램을 짜시오.

입력: Hello.java
출력: 파일이름은:Hello 이며 확장자는 java 입니다.

입력: Java.avi 
출력: 파일이름은:Java 이며 확장자는 avi 입니다.
import java.util.Scanner;

public class FileName {
	private String name;
	private int stop;

	void input() {
		Scanner sc = new Scanner(System.in);
		System.out.println("이름을 입력하세요 : ");
		name = sc.nextLine();
	}

	void cut() {
		for (int i = 0; i < name.length(); i++) {
			if (name.charAt(i) == '.') {
				stop = i;
			}
		}
		System.out.print("파일 이름은: " + name.substring(0, stop) + "이며 확장자는 " + name.substring(stop + 1) + "입니다.");

	}

	void print() {
		input();
		cut();
	}

	public static void main(String[] args) {
		FileName n = new FileName();
		n.print();
	}
}


12. Scanner 클래스를 이용해서 한 줄 읽고, 공백으로 분리된 "단어"가 몇 개 들어 있는지 확인해보자.

   "그만"을 입력할 때까지 반복하는 프로그램이다.힌트(split 함수를 이용해 볼것)

예) 입력 : Java Programming 
출력 : 단어의 개수는 2
입력 : 자바 수업은 2층 C클래스 
출력 : 단어의 개수는 4
입력 : 그만 > 출력 : 프로그램 종료

import java.util.Scanner;

public class Split {
	private String name;
	private String[] n1;
	private boolean a = true;

	boolean input() {

		Scanner sc = new Scanner(System.in);
		System.out.println("이름을 입력하세요 : ");
		name = sc.nextLine();
		if (name.equals("그만")) {
			return a = false;
		}
		return a = true;
	}

	void cut() {
		n1 = name.split(" ");
		System.out.println("단어의 갯수는 " + n1.length);

	}

	void print() {
		while (a) {
			input();
			if (a)
				cut();
		}
		System.out.println("프로그램을 종료합니다.");
	}

	public static void main(String[] args) {
		Split n = new Split();
		n.print();
	}
}

