1.생성자란 무엇인가?
 - 생성자란 클래스의 필드들을 초기화하는 기능을 한다.
   생성자의 이름은 클래스와 동일해야하며
   값을 반환하지 않고 반환형도 표시하지 않는다.

2.디폴트 생성자란 무엇인가?
 - 디폴트 생성자란 클래스 생성시 컴파일러에 의해 자동으로 생성되는 생성자를 말한다.
3.생성자의 용도에 대하여 설명하시오.
 - 생성자는 객체를 생성할 수 있게 해주며 클래스내 변수들의 값을 초기화해주는 역할을 한다.

4.null 에 대하여 설명하시오.
 - null은 없다는 뜻으로 변수에 null값을 넣어주면 값이 존재하지 않는다는 뜻이다.

5.금일 프로그래밍 했던 문제
========================================
자바 클래스를 작성하는 연습을 해보자. 다음 main() 메소드를 실행하였을 때 예시와 같이 출력되도록 TV 클래스를 작성하라.

public static void main(String[] args) {
   TV myTV = new TV("LG", 2017, 32); //LG에서 만든 2017년 32인치
   myTV.show();
}
LG에서 만든 2017년형 32인치 TV
public class TV {
	String brand;
	int year;
	int inch;

	public TV(String brand, int year, int inch) {
		this.brand = brand;
		this.year = year;
		this.inch = inch;
	}

	public String getBrand() {
		return brand;
	}

	public void setBrand(String brand) {
		this.brand = brand;
	}

	public int getYear() {
		return year;
	}

	public void setYear(int year) {
		this.year = year;
	}

	public int getInch() {
		return inch;
	}

	public void setInch(int inch) {
		this.inch = inch;
	}

	void Show() {
		System.out.println(getBrand() + "에서 만든 " + getYear()+"년형 "+getInch()+"인치 TV");
	}

}
==========================================
		int math, science, english;
		math = 90;
		science = 100; 
		english = 80;
		
		Grade me = new Grade(math, science, english);
		System.out.println("평균은 " + me.average());

public class Grade {
	int math, science, english;

	Grade(int math, int science, int english) {
		this.math = math;
		this.science = science;
		this.english = english;
	}

	public int getMath() {
		return math;
	}

	public void setMath(int math) {
		this.math = math;
	}

	public int getScience() {
		return science;
	}

	public void setScience(int science) {
		this.science = science;
	}

	public int getEnglish() {
		return english;
	}

	public void setEnglish(int english) {
		this.english = english;
	}

	public double average() {
		double average = (getEnglish() + getMath() + getScience()) / 3.0;
		return average;
	}
}

============================================
노래 한 곡을 나타내는 Song 클래스를 작성하라. Song은 다음 필드로 구성된다.

- 노래의 제목을 나타내는 title
- 가수를 나타내는 artist
- 노래가 발표된 연도를 나타내는 year
- 국적을 나타내는 country

또한 Song 클래스에 다음 생성자와 메소드를 작성하라.
- 생성자 2개: 기본 생성자와 매개변수로 모든 필드를 초기화하는 생성자
- 노래 정보를 출력하는 show() 메소드
- main() 메소드에서는 1978년, 스웨덴 국적의 ABBA가 부른 "Dancing Queen"을
song 객체로 생성하고 show()를 이용하여 노래의 정보를 다음과 같이 출력하라.

public class Song {
	String title;
	String artist;
	int year;
	String country;
	
	Song(){}
	Song(String title, String artist,int year,String country){
		this.title = title;
		this.artist = artist;
		this.year = year;
		this.country = country;
	}
	public String getTitle() {
		return title;
	}
	public void setTitle(String title) {
		this.title = title;
	}
	public String getArtist() {
		return artist;
	}
	public void setArtist(String artist) {
		this.artist = artist;
	}
	public int getYear() {
		return year;
	}
	public void setYear(int year) {
		this.year = year;
	}
	public String getCountry() {
		return country;
	}
	public void setCountry(String country) {
		this.country = country;
	}
	public void show() {
		System.out.println(getYear()+"년 "+getCountry()+"국적의 "+getArtist()+"가 부른 "+getTitle());
	}
	
	
}
===============================================
아래와 같이 성적을 연속적으로 입력 받고 평균을 내는  프로그램을 작성하시오.

국어 영어 수학을 입력하세요!
100 60 70
평균은 76.66666666666667
계속 하시겠습니까
y
국어 영어 수학을 입력하세요!
90 80 70
평균은 80.0
계속 하시겠습니까
n
프로그램 종료 입니다.
public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int math = 0, science = 0, english = 0;
		String yesNo;
		while (true) {
			
			System.out.println("수학 점수 : ");
			math = sc.nextInt();
			System.out.println("과학 점수 : ");
			science = sc.nextInt();
			System.out.println("영어 점수 : ");
			english = sc.nextInt();
			Grade s1 = new Grade(math, science, english);
			System.out.println("평균은 : " + s1.average());
			
			System.out.println("계속하시겠습니까?(Y/N)");
			yesNo = sc.next(); 
			
			if (yesNo.equals("Y") || yesNo.equals("y")) {
				continue;
			}
			else {
				System.out.println("프로그램을 종료합니다!");
				sc.close();
				break;
			}
		}

	}
}
==============================================
6. 아래의 프로그램을 작성하시오.
 - 화폐 매수 구하기
 - 반드시 클래스로 작성할것 
출력
---------------------------------
136000
오만원 : 2장
만원 : 3장
오천원 : 1장
천원 : 1장
오백원 : 0개
백원 : 0개
계속 하시겠습니까
y
1456000
오만원 : 29장
만원 : 0장
오천원 : 1장
천원 : 1장
오백원 : 0개
백원 : 0개
계속 하시겠습니까
public class Money {
	int money;
	int m50000;
	int m10000;
	int m5000;
	int m1000;
	int m500;
	int m100;

	public Money(int money) {
		this.money = money;
	}

	public void calculator() {
		if (money / 50000 != 0) {
			m50000 = money / 50000;
			money = money % 50000;
		}
		if (money / 10000 != 0) {
			m10000 = money / 10000;
			money = money % 10000;
		}
		if (money / 5000 != 0) {
			m5000 = money / 5000;
			money = money % 5000;
		}
		if (money / 1000 != 0) {
			m1000 = money / 1000;
			money = money % 1000;
		}
		if (money / 500 != 0) {
			m500 = money / 500;
			money = money % 500;
		}
		if (true) {
			m100 = money / 100;
			money = money % 100;
		}
		System.out.println("오만원 : " + m50000 + "장\n" + "만원 : " + m10000 + "장\n" + "오천원 : " + m5000 + "장\n" + "천원 : "
				+ m1000 + "장\n" + "오백원 : " + m500 + "장\n" + "백원 : " + m100 + "장");
	}

}
public class MoneyMain {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int money;
		String yesNo;
		while(true) {
			System.out.println("돈을 입력하세요 : ");
			money =sc.nextInt();
			Money m1 = new Money(money);
			m1.calculator();
			System.out.println("계속하시겠습니까?(Y/N)");
			yesNo = sc.next();
			if(yesNo.equals("Y")||yesNo.equals("y")) {
				continue;
			}
			else {
				System.out.println("프로그램을 종료합니다!");
				sc.close();
				break;
			}
				
				
		}
	}
}

7.자바의 명명 규칙에 대하여 설명하시오.
 - 클래스 : 클래스의 가장 첫 문자는 대문자이고 둘 이상의 단어에서 새로시작하는 단어는 대문자로 시작한다.
 - 메소드와 변수 : 첫 문자는 소문자이고 둘 이상의 단어에서 새로시작한느 단어는 대문자로 시작한다.
 - 상수 : 모든 문자를 대문자로 한다.
 - camel case : 낙타 봉우리라는 뜻으로 둘 이상의 단어가 합쳐져서 명명할때 단어의 시작은 대문자로 하는 방식을 말한다..
 - snake case : 각 단어의 사이를 _(언더바)로 구분해주는 방식을 말한다.

